[project]
name = "ubenchai"
version = "0.1.0"
description = "Unified Benchmarking Framework for AI Workflows"
authors = [
    {name = "Dennys Huber", email = "dennys.huber@proton.me"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pyyaml>=6.0.3,<7.0.0",
    "black>=25.9.0,<26.0.0",
    "loguru>=0.7.3,<0.8.0",
    "tabulate>=0.9.0,<0.10.0",
    "python-dotenv>=1.1.1,<2.0.0",
    "psutil>=5.9.0,<6.0.0",
    "requests>=2.31.0,<3.0.0",
]

[project.scripts]
ubenchai = "ubenchai.cli:main"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = true
name = "ubenchai"
version = "0.1.0"
description = "Unified Benchmarking Framework for AI Workflows"
authors = ["Dennys Huber <dennys.huber@proton.me>"]
readme = "README.md"
packages = [{include = "ubenchai", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
pyyaml = "^6.0.3"
black = "^25.9.0"
loguru = "^0.7.3"
tabulate = "^0.9.0"
python-dotenv = "^1.1.1"
psutil = "^5.9.0"
flask = "^3.0.0"
weasyprint = "^62.0"
jinja2 = "^3.1.0"
requests = "^2.31.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
pytest-asyncio = "^0.24.0"
pytest-xdist = "^3.6.0"
mypy = "^1.0.0"
coverage = {extras = ["toml"], version = "^7.0.0"}

[tool.poetry.scripts]
ubenchai = "ubenchai.cli:main"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "-ra",
    "--strict-markers",
    "--cov=src/ubenchai",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "slurm: Tests requiring SLURM",
]

[tool.coverage.run]
source = ["src/ubenchai"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
